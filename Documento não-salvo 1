abstract class Personagem{

   
 protected abstract emoji :string; 


    public nome: string
    protected acessorios : Acessorio[] = []
    private altura: number
    private elementos: string
    private velocidade: number
    private cor : string
    private nivel:number
    private evolucao: string
    private alcance : string

    constructor(nome:string,altura:number,elementos:string,velocidade:number,acessorios:Acessorio,cor:string,nivel:number,evolucao:string,alcance:string)
    {
        this.nome = nome
        this.acessorios = acessorios
        this.altura=altura
        this.cor = cor
        this.elementos= elementos
        this.velocidade= velocidade
        this.nivel= nivel
        this.evolucao=evolucao
        this.alcance=al

    }

    public getAcessorios():void{

        let contador = 0
        for(let item of  this.acessorios){
            console.log("Quais acessorios",item)
            contador ++
        }
        console.log("Quantidade de Acessório:",contador)
    }

    public setAcessorios(acessorios : Acessorio):void{
        this.acessorios.push(acessorios)
    }

    public removeAcessorios(): Acessorio | null{
        let acessorio  =  this.acessorios.pop()
        if(acessorio) return acessorio
        return null
    }

     //métodos acessores + - #
     public getNivel(): number{
        return this.nivel
    }

    public setNivel(nivel:number){
        this.nivel += nivel
    }

    public getEvolucao(): string{
        return this.evolucao
    }

    public setAlcance(alcance:string): void{
        this.alcance = alcance
    }


     atacar(persona: Personagem) : void{
        personagem.perderVida(this.forca)
        console.log(`${this.emoji} ${this.nome} está atacando... ${this.forca}`)
        this.moeda += personagem.dano()
     }

    private perderVida(forcaAtaque: num): number {
      return  this.vida -= forcaAtaque

     }

    private dano():number{
        if(this.vida >){
            console.log(`${this.emoji} ${this.nome} agora tem ${this.vida} de vida...`)
            return 0
        } else{
            this.morte()
            return Calcular.geraValor(100)
        }
   }

   vitoria {
    if(this.atacando =true){
        console.log(this.nome,"Vitória")
    }
  }


    abstract correr():void

    abstract getEmoji():void

    abstract morte(): void



    andar(){
        console.log("andando!!!")
    }

    voar(){
        console.log("voando!!!")
    }

   
}

class Acessorio{

nome:string

constructor(nome:string){
  this.nome: nome
  
}
}

